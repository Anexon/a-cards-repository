{"version":3,"sources":["webpack:///./src/components/Card/Card.tsx","webpack:///./src/components/CardList/CardList.tsx","webpack:///./src/components/NavBar/NavBar.tsx","webpack:///./src/pages/index.tsx"],"names":["Card","props","className","cardInfo","name","id","style","backgroundImage","imageUrl","description","CardList","useState","cards","setCards","isLoading","setIsloading","useEffect","firebase","getCards","then","map","card","index","key","NavBar","isLogged","displayName","userState","setUserState","onClick","undefined","loginWithGoogle","userInfo","logOut","Home","Firebase","Consumer"],"mappings":"mPAGe,SAASA,EAAKC,GAC3B,OACE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,mBACb,4BAAKD,EAAME,SAASC,MACpB,0BAAMF,UAAU,cAAcD,EAAME,SAASE,KAE/C,yBACEH,UAAU,oBACVI,MAAO,CAAEC,gBAAiB,OAASN,EAAME,SAASK,SAAW,OAE/D,yBAAKN,UAAU,yBACb,uBAAGA,UAAU,eAAeD,EAAME,SAASM,e,UCTpC,SAASC,EAAST,GAE9B,MACyBU,mBAAS,IAA5BC,EADN,KACaC,EADb,OAEiCF,oBAAS,GAApCG,EAFN,KAEiBC,EAFjB,KAWD,OAPAC,qBAAU,WAAM,MACd,UAAAf,EAAMgB,gBAAN,SAAgBC,WAAWC,MAAK,SAAAP,GAC9BG,GAAa,GACbF,EAASD,QAEV,CAACX,IAGF,yBAAKC,UAAU,aACZY,GAAa,yBAAKZ,UAAU,gBAAe,8BAAW,8BAAW,8BAAW,+BAC5EU,EAAMQ,KAAI,SAACC,EAAWC,GACrB,OAAO,kBAAC,EAAD,CAAMnB,SAAUkB,EAAME,IAAKD,Q,UCjB3B,SAASE,EAAOvB,GAE5B,MACmCU,mBAAS,CACvCc,UAAU,EACVC,YAAa,KAFVC,EADR,KACmBC,EADnB,KAuBC,OACI,yBAAK1B,UAAU,iBACX,+CACA,yBAAKA,UAAU,WACX,uBAAG2B,QAAUF,EAAUF,cAAmBK,EArBtD,WACI7B,EAAMgB,SAASc,kBAAkBZ,MAAK,SAACa,GACnCJ,EAAa,CACTH,UAAU,EACVC,YAAaM,EAASN,mBAiBgCC,EAAUF,SAAWE,EAAUD,YAAc,SAE/FC,EAAUF,UAAY,uBAAGI,QAfzC,WACI5B,EAAMgB,SAASgB,SAASd,MAAK,WACzBS,EAAa,CACTH,UAAU,EACVC,YAAa,UAWa,YC/B3B,SAASQ,IACtB,OACE,kBAACC,EAAA,EAAgBC,SAAjB,MACG,SAACnB,GACA,OACE,oCACE,kBAAC,EAAD,CAAQA,SAAUA,IAClB,kBAAC,EAAD,CAAUA,SAAUA,U","file":"component---src-pages-index-tsx-03ec98a1b341fa94e1ac.js","sourcesContent":["import React from \"react\"\r\nimport \"./Card.scss\"\r\n\r\nexport default function Card(props: any) {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <div className=\"title-container\">\r\n        <h1>{props.cardInfo.name}</h1>\r\n        <span className=\"identifier\">{props.cardInfo.id}</span>\r\n      </div>\r\n      <div\r\n        className=\"picture-container\"\r\n        style={{ backgroundImage: \"url(\" + props.cardInfo.imageUrl + \")\" }}\r\n      ></div>\r\n      <div className=\"description-container\">\r\n        <p className=\"description\">{props.cardInfo.description}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Card from \"../Card/Card\"\r\nimport { Firebase } from \"../Firebase\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./CardList.scss\"\r\n\r\nexport default function CardList(props: {\r\n  firebase: Firebase\r\n}) {\r\n  const [cards, setCards] = useState([]);\r\n  const [isLoading, setIsloading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    props.firebase?.getCards().then(cards => {\r\n      setIsloading(false);\r\n      setCards(cards);\r\n    });\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className=\"card-list\">\r\n      {isLoading && <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>}\r\n      {cards.map((card: any, index: number) => {\r\n        return <Card cardInfo={card} key={index}></Card>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nCardList.propTypes = {\r\n  firebase: PropTypes.instanceOf(Firebase),\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./NavBar.scss\";\r\nimport { Firebase } from \"../Firebase\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport default function NavBar(props: {\r\n    firebase: Firebase\r\n}) {\r\n    const [userState, setUserState] = useState({\r\n        isLogged: false,\r\n        displayName: \"\",\r\n    })\r\n\r\n    function login() {\r\n        props.firebase.loginWithGoogle().then((userInfo: any) => {\r\n            setUserState({\r\n                isLogged: true,\r\n                displayName: userInfo.displayName\r\n            })\r\n        });\r\n    }\r\n    function logout() {\r\n        props.firebase.logOut().then(() => {\r\n            setUserState({\r\n                isLogged: false,\r\n                displayName: \"\"\r\n            })\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <h1>Card Repository</h1>\r\n            <div className=\"options\">\r\n                <a onClick={!userState.isLogged ? login : undefined}>{userState.isLogged ? userState.displayName : \"Login\"}</a>\r\n                {\r\n                    userState.isLogged && <a onClick={logout}>Logout</a>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavBar.propTypes = {\r\n    firebase: PropTypes.instanceOf(Firebase),\r\n};","import React from \"react\"\r\nimport \"./index.scss\"\r\nimport { FirebaseContext } from \"../components/Firebase\"\r\nimport CardList from \"../components/CardList/CardList\"\r\nimport NavBar from \"../components/NavBar/NavBar\"\r\n\r\nexport default function Home() {\r\n  return (\r\n    <FirebaseContext.Consumer>\r\n      {(firebase: any) => {\r\n        return (\r\n          <>\r\n            <NavBar firebase={firebase}></NavBar>\r\n            <CardList firebase={firebase}></CardList>\r\n          </>\r\n        )\r\n      }}\r\n    </FirebaseContext.Consumer>\r\n  )\r\n}\r\n"],"sourceRoot":""}